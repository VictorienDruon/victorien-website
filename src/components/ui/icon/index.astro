---
import { icons } from "lucide";
import { token } from "@styled-system/tokens";
import type { SizeToken } from "@styled-system/tokens";
import type { HTMLAttributes } from "astro/types";

type Size = "sm" | "md" | "lg" | "xl";

export type Props = HTMLAttributes<"svg"> & {
	name: keyof typeof icons;
	size?: Size;
};

const getAffixSize = (size: Props["size"]): SizeToken => {
	switch (size) {
		case "sm":
			return "4";
		case "md":
			return "5";
		case "lg":
			return "6";
		case "xl":
			return "7";
		default:
			return "5";
	}
};

const { name, size, ...props } = Astro.props;

const icon = icons[name];

const [, attributes, children] = icon;

const componentChildren = children
	?.map(
		([shape, attributes]) =>
			`<${shape} ${Object.entries(attributes)
				.map(([k, v]) => `${k}="${v}"`)
				.join(" ")} />`
	)
	.join("");

const componentAttributes = { ...attributes, ...props };

const iconSize = getAffixSize(size);
const style = {
	// @ts-ignore
	width: token.var(`spacing.${iconSize}`),
	// @ts-ignore
	height: token.var(`spacing.${iconSize}`),
};
---

<svg style={style} set:html={componentChildren} {...componentAttributes} />
